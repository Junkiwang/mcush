from Arm.Stm32 import *


env = Stm32f407xx()
haldir='stm32f407zg_eu'
env.setLinkfile( '/ld/stm32f407zg_min.ld' )
port = 'ARM_CM4F'
env.appendDefineFlags( [ 'HSE_VALUE=8000000' ] )

#env = Stm32f767xx()
#haldir='stm32f767zi_nucleo'
#env.setLinkfile( '/ld/stm32f767zi_min.ld' )
#port = 'ARM_CM7'


env.appendDefineFlags(['MCUSH_STACK_SIZE=40000'])


env.appendPath([
    '.',
    '/libFreeRTOS',
    '/libFreeRTOS/include',
    '/libFreeRTOS/portable/GCC/%s'% port,
    '/mcush',
    '/hal%s'% haldir,
    '/CMSIS/Lib/GCC',
])


env.appendGlobSource([
    '*.c',
    '/mcush/*.c',
    '/hal%s/*.c'% haldir,
    '/libFreeRTOS/*.c',
    '/libFreeRTOS/portable/MemMang/heap_3.c',
    '/libFreeRTOS/portable/GCC/%s/port.c'% port,
])


env.appendDriver( CMSIS_DSP_Driver(env._MCPU, fpu=True, source=True) )
#env.appendDriver( CMSIS_DSP_Driver(env._MCPU, fpu=True, source=False) )

env.appendLib(['m'])  # NOTE: add math lib after arm lib

env.makeApp()
